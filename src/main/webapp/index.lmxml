[base]
---
[title]: "Try Lmxml"

[contents]:
  >.container
    section
      >.page-header h1 "XML is dead... Long live XML!"
      >#instructions .modal
        >.modal-header h2 "Quick Reference"
        >.modal-body [instructions]
      >#error .alert-message .error .fade .in @style: "display: none;"
        p "Error Loading Request... Try again?"
      >.row
        >.span12 
          span #reference .label .notice "Reference"
      >.row
        [output]
        [compiler]

[instructions]:
  ul
    li "Nodes are single words without spaces"
    li "Plain text is quoted is quoted"
    li "Multi-line text is fenced in with " code "```" 
    li "Indention is important, denoting sibling nodes and new-lines (default is 2 spaces)"
    li "JSON-style attributes"
    li "Attributes can be prefixed with " code "@"
    li "Class attributes can be simply prefixed with '.'"
    li "Multiple class attributes can be string together: " code ".label .notice"
    li "Id attributes can be simply prefixed with '#'"
    li "Markdown Indirect link style templates"
    li "Indirect definitions are delimited from main document by " code "---"
    li "Unparsed text is suffixed with " code "is unescaped"
  span 
    "More in-depth "
      a @href = "https://github.com/philcali/lmxml/wiki/Syntax"
        "syntax explanations"
    " can be found on the wiki."

[compiler]:
  >.span6
    h2 "LMXML"
    form { method: "POST" }
      textarea .lmxml {
        autofocus: "autofocus",
        name: "lmxml-input"
      }
        ```
data
   persons
     people
       person @name="{name}" @age="{age}"
   places
     locations
       place name
        ```
      h2 "JSON Data"
      textarea .lmxml .json @name="lmxml-json"
        ```
{
  "people": [
    { "name": "Tomcar", "age": 999 },
    { "name": "Cartom", "age": 111}
  ],
  "locations": [
    { "name": "My House" },
    { "name": "Their Home" }
  ]
}
        ```
      input #run_link { 
        class: "btn primary", 
        type: "submit", 
        value: "Run Code"
      }
      p small "Also run with ctrl / cmd (on Mac) + enter"

[output]:
  >.span6
    h2 "Output"
    pre .lmxml_output
      ```
<data>
   <persons>
     <person name="Tomcar" age="999"></person>
     <person name="Cartom" age="111"></person>
   </persons>
   <places>
     <place>My House</place>
     <place>Their Home</place>
   </places>
</data>
      ```

[try]: "Try LMXML"

[javascript]: 
  script { type: "text/javascript" }
    ```
//<![CDATA[
$(document).ready (function() {

  $("#instructions").modal({ keyboard: true, backdrop: true});
  $("#instructions").modal('hide');

  $(".lmxml").ajaxError(function() {
    $(this).attr("disabled", false);
    $("#error").slideDown('fast').delay(2000).slideUp('fast');
  });

  $("#run_link").click(function() {
    runCode();
    return false;
  });

  $("#reference").click(function() {
    $("#instructions").modal('show');
  });

  var tab = "  ";

  $(".lmxml").keydown(function(event) {
    var keyCode = event.keyCode || event.which;

    var t = event.target
    var start = t.selectionStart

    if (keyCode == 9) {
      event.preventDefault();
      
      if (t.selectionStart == t.selectionEnd) {
        t.value = t.value.slice(0, start).concat(tab).concat( 
                  t.value.slice(start, t.value.length));
        t.selectionStart = t.selectionEnd = start + tab.length;
      }
    } else if (keyCode == 8 && t.value.slice(start - tab.length, start) == tab) {
      event.preventDefault();

      if (t.selectionStart == t.selectionEnd) {
        t.value = t.value.slice(0, start - tab.length).concat(
                  t.value.slice(start, t.value.length));
        t.selectionStart = t.selectionEnd = start - tab.length;
      } else {
        t.value = t.value.slice(0, start).concat(
                  t.value.slice(t.selectionEnd, t.value.length));
      }
    }

    var meta = (event.ctrlKey == 1 || event.metaKey == 1);

    if (meta && keyCode == 13) {
      event.preventDefault();

      runCode();
    }
  });

  function runCode() {
    $(".lmxml").attr("disabled", true);

    var params = {
      "lmxml-input": $("textarea[name=lmxml-input]").val(),
      "lmxml-json":  $("textarea[name=lmxml-json]").val()
    };

    $.post("/", params, function(data) {
      $(".lmxml_output").text(data);
      $(".lmxml").attr("disabled", false);
    });
  }
});
//]]
    ``` is unescaped
