html
  head
    title [try]
    script { 
      type: "text/javascript", 
      src: "http://code.jquery.com/jquery-1.6.4.min.js"
    }
    [javascript]
    [styles]
  body
    div #page
      div #error { style: "display: none;" }
        "Error Loading Request... Try again?"
      div #loading { style: "display: none;" }
        img { src: "loading.gif" }
      div #header
        h1 "XML is dead ... Long live XML!"
      div #content 
        a .click_me img { src: "attention.png", alt: "Start here" }
        span .click_me { style: "font-size: 12px;" } "Reference"
        div #instructions { style: "display: none;" } [instructions]
        [rest]
      div #footer
        "Visit "
          a { href: "https://github.com/philcali" } "philcali"
        " for more from the author."
----
[instructions]:
  h2 "Quick Reference"
  ul
    li "Nodes are single words without spaces or hyphens"
    li "Quoted string are quoted"
    li "Multi-line strings are fenced in with " code "```" 
    li "Indention is important denoting sibling nodes and new-lines (default is 2 spaces)"
    li "JSON-style sttributes"
    li "Class attributes can be simply prefixed with '.'"
    li "Id attributes can be simply prefixed with '#'"
    li "Markdown Indirect link style templates"
    li "Indirect definitions are delimited from main document by " code "---"
  h2 "HTML Example"
  p "This " a { href: "index.lmxml" } "page"
    " is an lmxml file."
  p "Here is an example using LMXML to generate a HTML template."
  pre ```
html
   head title "Title"
   body [rest]
---
[rest]:
   div #page
     div #header h1 "Blog Title"
     div #content div #posts posts [posts]
 
[posts]:
   div .post
     div .post_title post_title
     div .post_header post_body
      ```
  p "Becomes:"
  pre ```
<html>
  <head>
    <title>Title</title>
  </head>
  <body>
    <div id="page">
      <div id="header">
        <h1>Blog Title</h1>
      </div>
      <div id="content">
        <div id="posts">
          <posts>
            <div class="post">
              <div class="post_title">
                <post_title></post_title>
              </div>
              <div class="post_header">
                <post_body></post_body>
              </div>
            </div>
          </posts>
        </div>
      </div>
    </div>
  </body>
</html>
    ```

[try]: "Try LMXML"

[rest]:
  div #containers div .input
      form { method: "POST" }
        textarea .lmxml { 
          autofocus: "autofocus", 
          name: "lmxml-input", 
          rows: "18", 
          cols: "60"
        }
          ```
data
   persons
     person { name: "Tomcar", age: "999" }
     person { name: "Cartom", age: "111" }
   places
     place "My House"
     place "Their Home"
          ```
    div .output
      pre .lmxml_output
        ```
<data>
   <persons>
     <person name="Tomcar" age="999"></person>
     <person name="Cartom" age="111"></person>
   </persons>
   <places>
     <place>My House</place>
     <place>Their Home</place>
   </places>
</data>
        ```

[javascript]:
  script { type: "text/javascript" }
    ```
//<![CDATA[
$(document).ready (function() {

  $(".lmxml").ajaxError(function() {
    $("#loading").hide();
    $(this).attr("disabled", false);
    $("#error").show("fast").delay(2000).hide("fast")
  });

  $(".click_me").click(function() {
    $("#instructions").toggle("fast");
  });

  var tab = "  ";

  $(".lmxml").keydown(function(event) {
    var keyCode = event.keyCode || event.which;

    var t = event.target
    var start = t.selectionStart

    if (keyCode == 9) {
      event.preventDefault();
      
      if (t.selectionStart == t.selectionEnd) {
        t.value = t.value.slice(0, start).concat(tab).concat( 
                  t.value.slice(start, t.value.length));
        t.selectionStart = t.selectionEnd = start + tab.length;
      }
    } else if (keyCode == 8 && t.value.slice(start - tab.length, start) == tab) {
      event.preventDefault();

      if (t.selectionStart == t.selectionEnd) {
        t.value = t.value.slice(0, start - tab.length).concat(
                  t.value.slice(start, t.value.length));
        t.selectionStart = t.selectionEnd = start - tab.length;
      } else {
        t.value = t.value.slice(0, start).concat(
                  t.value.slice(t.selectionEnd, t.value.length));
      }
    }

    if (event.metaKey == 1 && keyCode == 13) {
      event.preventDefault();

      $(this).attr("disabled", true);
      $("#loading").show();

      $.post("/", { "lmxml-input": $(this).val() }, function(data) {
        $(".lmxml_output").text(data);
        $("#loading").hide();
        $(".lmxml").attr("disabled", false);
      });
    }
  });
});
//]]
    ``` is unescaped

[styles]:
  style { type: "text/css" }
    ```
body {
  font-family: Arial, Helvetica, sans-serif;
  background-color: #555;
}

#error {
  background-color: #703673;
  border-radius: 10px 10px;
  border: 1px solid #9F46A3;
  color: #DE3782;
  padding: 10px;
  box-shadow: 10px 10px 10px #000;
  position: absolute;
  left: 38%;
  top: 40%;
}

#page {
  width: 90%;
  background-color: #602463;
  margin: auto auto;
  border-radius: 10px 10px;
  padding: 10px;
  box-shadow: 10px 10px 10px #000;
}

#header {
  width: 99%;
  background-color: #703673;
  border-radius: 10px 10px;
  text-align: center;
  color: #D092D4;
  padding-top: 20px;
  padding-bottom: 20px;
  margin: 5px auto;
  border: 1px solid #9F46A3;
}

#header h1 {
  font-family: Georgia;
  font-size: 20px;
}

#content {
  color: #D092D4;
}

#containers {
  height: 350px;
  overflow: auto;
}

#loading {
  position: absolute;
  left: 47%;
  top: 45%;
}

#instructions {
  padding: 10px;
  background-color: #703673;
  border-radius: 10px 10px;
  border: 1px solid #9F46A3;
  color: #D092D4;
  margin: 8px;
}

#instructions pre {
  font-family: Monaco;
  border: 1px solid #9F46A3;
}

.input {
  float: left;
  width: 49%;
  padding-left: 5px;
}

.output {
  float: right;
  width: 49%;
  height: 330px;
}

.lmxml {
  background-color: #602463;
  color: #D092D4;
  border: none;
  font-family: Monaco;
  font-size: 12px;
  resize: none;
}

.click_me:hover {
  cursor: pointer;
}

.translate:hover {
  cursor: pointer;
}

#footer {
  font-size: 13px;
  color: #D092D4;
}

a, a:visited {
  color: #4263CF;
}
    ```
